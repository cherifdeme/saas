name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ci:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Cache backend dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-backend-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-backend-
          
    - name: Cache frontend dependencies  
      uses: actions/cache@v3
      with:
        path: client/node_modules
        key: ${{ runner.os }}-frontend-${{ hashFiles('client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-frontend-
    
    - name: Install backend dependencies
      run: npm ci
      
    - name: Install frontend dependencies
      run: |
        cd client
        npm install
        
    - name: Syntax check
      run: |
        echo "üîç Checking backend syntax..."
        node -c server.js
        echo "‚úÖ Backend syntax OK"
        
        echo "üîç Checking frontend dependencies..."
        cd client && npm ls react > /dev/null 2>&1
        echo "‚úÖ Frontend dependencies OK"
        
    - name: Run backend tests
      run: npm test
      env:
        NODE_ENV: test
        
    - name: Run frontend tests
      run: |
        cd client
        CI=true npm test -- --coverage --watchAll=false
        
    - name: Build frontend application
      run: |
        cd client
        npm run build
        
    - name: Verify backend can start
      run: |
        timeout 10s npm start || exit_code=$?
        if [ $exit_code -eq 124 ]; then
          echo "‚úÖ Server started successfully (timed out as expected)"
          exit 0
        elif [ $exit_code -eq 0 ]; then
          echo "‚úÖ Server started and stopped successfully"
          exit 0
        else
          echo "‚ùå Server failed to start"
          exit 1
        fi
      env:
        NODE_ENV: test
        PORT: 3001 